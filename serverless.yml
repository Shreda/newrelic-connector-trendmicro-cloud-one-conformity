service: newrelic-trendmicro-conformity

frameworkVersion: '1'

custom:
  config: ${file(./config.${opt:stage, self:provider.stage, 'dev'}.yml)}
  pythonRequirements:
    dockerizePip: true
    layer: true

provider:
  name: aws
  runtime: python3.8
  stage: ${opt:stage, 'dev'}

# you can overwrite defaults here
#  stage: dev
#  region: us-east-1

# Lambda function's IAM Role
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "s3:GetObject"
      Resource:
        Fn::Join:
          - ""
          - - "arn:aws:s3:::"
            - ${self:custom.config.TRENDMICRO_CONFORMITY_BUCKET_NAME}
            - "/*"

functions:
  connector:
    handler: handler.handler
    layers:
      - { Ref: PythonRequirementsLambdaLayer }
    events:
      - s3:
          bucket: ${self:custom.config.TRENDMICRO_CONFORMITY_BUCKET_NAME}
          event: s3:ObjectCreated:*
          rules:
            - suffix: .json
          existing: true  
      - schedule:
          name: fetch-all-conformity-checks
          description: 'Fetch all Conformity checks'
          rate: rate(7 days)
    timeout: 120 # 2 minutes
    environment:
      NEW_RELIC_INSERT_KEY: ${self:custom.config.NEW_RELIC_INSERT_KEY}
      CLOUD_CONFORMITY_API_KEY: ${self:custom.config.CLOUD_CONFORMITY_API_KEY}
      CLOUD_CONFORMITY_ACCOUNT_ID: ${self:custom.config.CLOUD_CONFORMITY_ACCOUNT_ID}

plugins:
  - serverless-python-requirements
